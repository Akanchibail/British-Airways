<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeSingleValueFieldV1 />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
        <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        <members>
          <member value='&quot;Overall Rating&quot;' />
          <member value='&quot;Cabin Staff Service&quot;' />
          <member value='&quot;Entertainment&quot;' />
          <member value='&quot;Food&quot;' />
          <member value='&quot;Ground Service&quot;' />
          <member value='&quot;Seat Comfort&quot;' />
          <member value='&quot;Value&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='ba_reviews+' inline='true' name='federated.0ei5n871bqdt4w1c458f002k1sfl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ba_reviews' name='textscan.0y6w7ks0o9wodr13gmiia1kh4eb0'>
            <connection class='textscan' directory='C:/Users/DELL/Desktop/Tableau/British Airways Project' filename='ba_reviews.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ba_reviews.csv].[place]' />
              <expression op='[Countries.csv].[Country]' />
            </expression>
          </clause>
          <relation connection='textscan.0y6w7ks0o9wodr13gmiia1kh4eb0' name='ba_reviews.csv' table='[ba_reviews#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='header' ordinal='0' />
              <column datatype='string' name='author' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='place' ordinal='3' />
              <column datatype='string' name='content' ordinal='4' />
              <column datatype='string' name='aircraft' ordinal='5' />
              <column datatype='string' name='traveller_type' ordinal='6' />
              <column datatype='string' name='seat_type' ordinal='7' />
              <column datatype='string' name='route' ordinal='8' />
              <column datatype='date' name='date_flown' ordinal='9' />
              <column datatype='string' name='recommended' ordinal='10' />
              <column datatype='string' name='trip_verified' ordinal='11' />
              <column datatype='integer' name='rating' ordinal='12' />
              <column datatype='integer' name='seat_comfort' ordinal='13' />
              <column datatype='integer' name='cabin_staff_service' ordinal='14' />
              <column datatype='integer' name='food_beverages' ordinal='15' />
              <column datatype='integer' name='ground_service' ordinal='16' />
              <column datatype='integer' name='value_for_money' ordinal='17' />
              <column datatype='integer' name='entertainment' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.0y6w7ks0o9wodr13gmiia1kh4eb0' name='Countries.csv' table='[Countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='string' name='Continent' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>header</remote-name>
            <remote-type>129</remote-type>
            <local-name>[header]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>header</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>content</remote-name>
            <remote-type>129</remote-type>
            <local-name>[content]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>content</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aircraft]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>aircraft</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>traveller_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[traveller_type]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>traveller_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seat_type]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>seat_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_flown</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_flown]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>date_flown</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_verified]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>trip_verified</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_beverages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[food_beverages]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>food_beverages</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entertainment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[entertainment]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>entertainment</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;A219&quot;</value>
            <value>&quot;A319 / Boeing 747&quot;</value>
            <value>&quot;A319 / Boeing 787-9&quot;</value>
            <value>&quot;A319 / Boeing777&quot;</value>
            <value>&quot;A319/320&quot;</value>
            <value>&quot;A320 / Boeing 767&quot;</value>
            <value>&quot;A320 / Boeing 777&quot;</value>
            <value>&quot;A320 / Boeing 787&quot;</value>
            <value>&quot;A320 A350&quot;</value>
            <value>&quot;A320 Finnair&quot;</value>
            <value>&quot;A320 Neo&quot;</value>
            <value>&quot;A320-200&quot;</value>
            <value>&quot;A320, A380&quot;</value>
            <value>&quot;A320neo&quot;</value>
            <value>&quot;A321 / Boeing 777&quot;</value>
            <value>&quot;A321 neo&quot;</value>
            <value>&quot;A321 Neo&quot;</value>
            <value>&quot;A321-neo&quot;</value>
            <value>&quot;A321neo&quot;</value>
            <value>&quot;A330&quot;</value>
            <value>&quot;A340-300, A320&quot;</value>
            <value>&quot;A350&quot;</value>
            <value>&quot;A350-1000&quot;</value>
            <value>&quot;A380 / Boeing 747-400&quot;</value>
            <value>&quot;A380 and 747&quot;</value>
            <value>&quot;A380-800&quot;</value>
            <value>&quot;B737-400 / A380 / A319&quot;</value>
            <value>&quot;B747-400&quot;</value>
            <value>&quot;B777-300ER / A320 / A380&quot;</value>
            <value>&quot;Boeing 737-800&quot;</value>
            <value>&quot;Boeing 744&quot;</value>
            <value>&quot;Boeing 747 / A320&quot;</value>
            <value>&quot;Boeing 747 / A380&quot;</value>
            <value>&quot;Boeing 747 400&quot;</value>
            <value>&quot;Boeing 747 and Boeing 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777&quot;</value>
            <value>&quot;Boeing 747-400 / A320&quot;</value>
            <value>&quot;Boeing 777 200&quot;</value>
            <value>&quot;Boeing 777 and Boeing 787&quot;</value>
            <value>&quot;Boeing 777-200ER&quot;</value>
            <value>&quot;Boeing 777-236 ER&quot;</value>
            <value>&quot;Boeing 777-300&quot;</value>
            <value>&quot;Boeing 777-300ER&quot;</value>
            <value>&quot;Boeing 787 / A320&quot;</value>
            <value>&quot;Boeing 787-10&quot;</value>
            <value>&quot;Boeing 787-8&quot;</value>
            <value>&quot;Boeing 787-800&quot;</value>
            <value>&quot;Boeing 787-9 / A319&quot;</value>
            <value>&quot;Boeing 787-900&quot;</value>
            <value>&quot;Boeing 787(9)&quot;</value>
            <value>&quot;E190&quot;</value>
            <value>&quot;Embraer&quot;</value>
            <value>&quot;Embraer 170&quot;</value>
            <value>&quot;Embraer 190&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Metric Selected' datatype='integer' name='[Calculation_1102537517512941568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#13;&#10;when &apos;Entertainment&apos; then [entertainment]&#13;&#10;when &apos;Food&apos; then [food_beverages]&#13;&#10;when &apos;Ground Service&apos; then [ground_service]&#13;&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#13;&#10;when &apos;Value&apos; then [value_for_money]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]' role='measure' type='quantitative' />
      <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
      <column caption='Author' datatype='string' name='[author]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Content' datatype='string' name='[content]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Flown' datatype='date' name='[date_flown]' role='dimension' type='ordinal' />
      <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
      <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Header' datatype='string' name='[header]' role='dimension' type='nominal' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
      <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
      <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      <column caption='Trip Verified' datatype='string' name='[trip_verified]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Aircraft (group))' hidden='true' name='[Action (Aircraft (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Aircraft (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Place)' hidden='true' name='[Action (Place)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[place]' />
        </groupfilter>
      </group>
      <layout common-percentage='0.954813' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0451866' show-structure='true' user-set-layout-v2='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='ba_reviews.csv' id='ba_reviews.csv_49140165BFA6431A82FEB32795DE928C'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[ba_reviews.csv].[place]' />
                    <expression op='[Countries.csv].[Country]' />
                  </expression>
                </clause>
                <relation connection='textscan.0y6w7ks0o9wodr13gmiia1kh4eb0' name='ba_reviews.csv' table='[ba_reviews#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='header' ordinal='0' />
                    <column datatype='string' name='author' ordinal='1' />
                    <column datatype='date' name='date' ordinal='2' />
                    <column datatype='string' name='place' ordinal='3' />
                    <column datatype='string' name='content' ordinal='4' />
                    <column datatype='string' name='aircraft' ordinal='5' />
                    <column datatype='string' name='traveller_type' ordinal='6' />
                    <column datatype='string' name='seat_type' ordinal='7' />
                    <column datatype='string' name='route' ordinal='8' />
                    <column datatype='date' name='date_flown' ordinal='9' />
                    <column datatype='string' name='recommended' ordinal='10' />
                    <column datatype='string' name='trip_verified' ordinal='11' />
                    <column datatype='integer' name='rating' ordinal='12' />
                    <column datatype='integer' name='seat_comfort' ordinal='13' />
                    <column datatype='integer' name='cabin_staff_service' ordinal='14' />
                    <column datatype='integer' name='food_beverages' ordinal='15' />
                    <column datatype='integer' name='ground_service' ordinal='16' />
                    <column datatype='integer' name='value_for_money' ordinal='17' />
                    <column datatype='integer' name='entertainment' ordinal='18' />
                  </columns>
                </relation>
                <relation connection='textscan.0y6w7ks0o9wodr13gmiia1kh4eb0' name='Countries.csv' table='[Countries#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Country' ordinal='0' />
                    <column datatype='string' name='Code' ordinal='1' />
                    <column datatype='string' name='Continent' ordinal='2' />
                    <column datatype='string' name='Region' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0ei5n871bqdt4w1c458f002k1sfl'>
      <datasources>
        <datasource caption='ba_reviews+' name='federated.0ei5n871bqdt4w1c458f002k1sfl' />
      </datasources>
      <datasource-dependencies datasource='federated.0ei5n871bqdt4w1c458f002k1sfl'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;A219&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]'>
        <groupfilter function='level-members' level='[Aircraft (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]'>
        <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]'>
        <groupfilter function='level-members' level='[none:seat_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]'>
        <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]' included-values='all' />
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1_715151A8B210470FAB4D79C30D311014]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_61469F3F0A074DE5A43DE796C9858D3E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Aircraft' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_62570CA6C92541CF9264D82A65BE3763]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_4354A54AC1DF4DA59C31B2C9A1EE9E94]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_0E534D6C7DE64A60A9A64DABD396AAF1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Summary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Aircraft'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Aircraft</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.0ei5n871bqdt4w1c458f002k1sfl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ei5n871bqdt4w1c458f002k1sfl'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_1102537517512941568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#13;&#10;when &apos;Entertainment&apos; then [entertainment]&#13;&#10;when &apos;Food&apos; then [food_beverages]&#13;&#10;when &apos;Ground Service&apos; then [ground_service]&#13;&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#13;&#10;when &apos;Value&apos; then [value_for_money]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1102537517512941568]' derivation='Avg' name='[avg:Calculation_1102537517512941568:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1102537517512941568]' derivation='Sum' name='[sum:Calculation_1102537517512941568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action1_715151A8B210470FAB4D79C30D311014]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action1_715151A8B210470FAB4D79C30D311014]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ei5n871bqdt4w1c458f002k1sfl].[sum:Calculation_1102537517512941568:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (MONTH(Date))]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]' scope='cols' value='Number of Reviews' />
            <format attr='title' class='0' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]' scope='cols' value='Overall Rating' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]' />
              <tooltip column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#898989'><![CDATA[<[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'><![CDATA[Average:<[Parameters].[Parameter 1]> 	<[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'><![CDATA[Number of reviews : <[federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#55aa7f' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[sum:Calculation_1102537517512941568:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#898989'><![CDATA[<[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'><![CDATA[Average <[Parameters].[Parameter 1]> <[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'><![CDATA[Number of reviews:	<[federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]</rows>
        <cols>([federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk] + [federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk])</cols>
      </table>
      <simple-id uuid='{439D0756-C6D0-4892-937D-53D36B6E5574}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.0ei5n871bqdt4w1c458f002k1sfl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ei5n871bqdt4w1c458f002k1sfl'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_1102537517512941568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#13;&#10;when &apos;Entertainment&apos; then [entertainment]&#13;&#10;when &apos;Food&apos; then [food_beverages]&#13;&#10;when &apos;Ground Service&apos; then [ground_service]&#13;&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#13;&#10;when &apos;Value&apos; then [value_for_money]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1102537517512941568]' derivation='Avg' name='[avg:Calculation_1102537517512941568:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Aircraft (group))]'>
            <groupfilter function='level-members' level='[Aircraft (group)]' user:ui-action-filter='[Action2_61469F3F0A074DE5A43DE796C9858D3E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action1_715151A8B210470FAB4D79C30D311014]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (MONTH(Date))]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Aircraft (group))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Longitude (generated)]' field-type='quantitative' max='1584700.6355575696' min='-41621175.748663165' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Latitude (generated)]' field-type='quantitative' max='14807533.325549312' min='-3351457.731719018' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#ad4523</color>
                <color>#bc4d23</color>
                <color>#cb5522</color>
                <color>#d95e21</color>
                <color>#e76820</color>
                <color>#ee7725</color>
                <color>#f58a30</color>
                <color>#fa9e3f</color>
                <color>#fdb053</color>
                <color>#ffc171</color>
                <color>#d9d5c9</color>
                <color>#b7c9c3</color>
                <color>#99baae</color>
                <color>#7dab9a</color>
                <color>#649c87</color>
                <color>#4e8d76</color>
                <color>#3a7d65</color>
                <color>#296e55</color>
                <color>#1b5f46</color>
                <color>#0f5038</color>
                <color>#07412b</color>
                <color>#013220</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:place:nk]' />
              <color column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]' />
              <lod column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]' />
              <geometry column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#898989'><![CDATA[<[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:place:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'><![CDATA[Average : <[Parameters].[Parameter 1]> <[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#898989'><![CDATA[Number of Reviews :<[federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
                <format attr='mark-color' value='#55aa7f' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Latitude (generated)]</rows>
        <cols>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{07FC0F05-1079-4D5E-9ED0-BE311DD0C35F}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.0ei5n871bqdt4w1c458f002k1sfl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ei5n871bqdt4w1c458f002k1sfl'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_1102537517512941568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Overall Rating&apos; THEN [rating]&#13;&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#13;&#10;when &apos;Entertainment&apos; then [entertainment]&#13;&#10;when &apos;Food&apos; then [food_beverages]&#13;&#10;when &apos;Ground Service&apos; then [ground_service]&#13;&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#13;&#10;when &apos;Value&apos; then [value_for_money]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1102537517512941568]' derivation='Avg' name='[avg:Calculation_1102537517512941568:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Aircraft (group))]'>
            <groupfilter function='level-members' level='[Aircraft (group)]' user:ui-action-filter='[Action1_715151A8B210470FAB4D79C30D311014]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action1_715151A8B210470FAB4D79C30D311014]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Aircraft (group))]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]' scope='rows' value='' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#898989'><![CDATA[<[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989'><![CDATA[Average :<[Parameters].[Parameter 1]>  <[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#55aa7f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]</rows>
        <cols>[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{F244BECC-816F-436C-A8BE-A25FEA48B65C}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.0ei5n871bqdt4w1c458f002k1sfl' />
          </datasources>
          <datasource-dependencies datasource='federated.0ei5n871bqdt4w1c458f002k1sfl'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_49140165BFA6431A82FEB32795DE928C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_49140165BFA6431A82FEB32795DE928C:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]</rows>
        <cols />
      </table>
      <simple-id uuid='{41D78D00-C8DB-4EB3-A21F-0933325C91A1}' />
    </worksheet>
    <worksheet name='Summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.0ei5n871bqdt4w1c458f002k1sfl' />
          </datasources>
          <datasource-dependencies datasource='federated.0ei5n871bqdt4w1c458f002k1sfl'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[entertainment]' derivation='Avg' name='[avg:entertainment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_beverages]' derivation='Avg' name='[avg:food_beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ground_service]' derivation='Avg' name='[avg:ground_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seat_comfort]' derivation='Avg' name='[avg:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value_for_money]' derivation='Avg' name='[avg:value_for_money:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[value_for_money]' derivation='Sum' name='[sum:value_for_money:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:cabin_staff_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:entertainment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:food_beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:ground_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:seat_comfort:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:value_for_money:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:rating:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:cabin_staff_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:entertainment:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:food_beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:ground_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:seat_comfort:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ei5n871bqdt4w1c458f002k1sfl].[sum:value_for_money:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Aircraft (group))]'>
            <groupfilter function='level-members' level='[Aircraft (group)]' user:ui-action-filter='[Action1_715151A8B210470FAB4D79C30D311014]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action1_715151A8B210470FAB4D79C30D311014]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Place)]'>
            <groupfilter function='level-members' level='[place]' user:ui-action-filter='[Action1_715151A8B210470FAB4D79C30D311014]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Aircraft (group))]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (MONTH(Date))]</column>
            <column>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Action (Place)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]' value='151' />
            <format attr='height' value='109' />
            <format attr='text-format' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Multiple Values]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#55aa7f' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Multiple Values]' />
              <text column='[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.0ei5n871bqdt4w1c458f002k1sfl].[Multiple Values]>]]></run>
                <run><![CDATA[
<[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D7E3FFD4-57E9-43CA-9CCF-6861B9BF4D84}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='629' maxwidth='1250' minheight='629' minwidth='1250' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='ba_reviews+' name='federated.0ei5n871bqdt4w1c458f002k1sfl' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
          <members>
            <member value='&quot;Overall Rating&quot;' />
            <member value='&quot;Cabin Staff Service&quot;' />
            <member value='&quot;Entertainment&quot;' />
            <member value='&quot;Food&quot;' />
            <member value='&quot;Ground Service&quot;' />
            <member value='&quot;Seat Comfort&quot;' />
            <member value='&quot;Value&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0ei5n871bqdt4w1c458f002k1sfl'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Others&quot;'>
              <value>&quot;A219&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97456' id='26' param='vert' type-v2='layout-flow' w='98720' x='640' y='1272'>
            <zone h='97456' id='16' param='horz' type-v2='layout-flow' w='98720' x='640' y='1272'>
              <zone h='97456' id='6' type-v2='layout-basic' w='98720' x='640' y='1272'>
                <zone h='64965' id='3' name='Summary' show-title='false' w='86480' x='12880' y='1272'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32491' id='5' type-v2='empty' w='98720' x='640' y='66237'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='64965' id='23' param='vert' type-v2='layout-flow' w='12240' x='640' y='1272' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='17488' id='9' type-v2='text' w='13280' x='0' y='1908'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>British Airways Review</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#55aa7f' />
          </zone-style>
        </zone>
        <zone h='80574' id='24' param='vert' type-v2='layout-flow' w='13556' x='0' y='19426'>
          <zone fixed-size='137' h='23053' id='22' is-fixed='true' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13556' x='0' y='19426'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='56' h='10175' id='17' is-fixed='true' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='13556' x='0' y='42479'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='92' h='15898' id='18' is-fixed='true' mode='radiolist' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]' type-v2='filter' w='13556' x='0' y='52654'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='85' h='14786' id='19' is-fixed='true' mode='radiolist' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]' type-v2='filter' w='13556' x='0' y='68552'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8267' id='20' mode='dropdown' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]' type-v2='filter' w='13556' x='0' y='83338'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8267' id='21' mode='dropdown' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]' type-v2='filter' w='13556' x='0' y='91605'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='43879' id='14' name='Map' w='44240' x='53440' y='19078' />
        <zone h='43243' id='27' name='Month' w='39120' x='14320' y='19555' />
        <zone h='38474' id='28' name='Aircraft' w='83280' x='14400' y='62321' />
        <zone h='80763' id='29' type-v2='empty' w='800' x='13280' y='19237'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#55aa7f' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97456' id='42' param='vert' type-v2='layout-flow' w='98720' x='640' y='1272'>
                <zone fixed-size='280' h='64965' id='3' is-fixed='true' name='Summary' show-title='false' w='86480' x='12880' y='1272'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='17488' id='9' type-v2='text' w='13280' x='0' y='1908'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>British Airways Review</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#55aa7f' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='10175' id='17' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='13556' x='0' y='42479'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='92' h='15898' id='18' mode='dropdown' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]' type-v2='filter' w='13556' x='0' y='52654'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='85' h='14786' id='19' mode='dropdown' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]' type-v2='filter' w='13556' x='0' y='68552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8267' id='20' mode='dropdown' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]' type-v2='filter' w='13556' x='0' y='83338'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8267' id='21' mode='dropdown' name='Map' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]' type-v2='filter' w='13556' x='0' y='91605'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='43879' id='14' is-fixed='true' name='Map' w='44240' x='53440' y='19078'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='137' h='23053' id='22' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13556' x='0' y='19426'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='43243' id='27' is-fixed='true' name='Month' w='39120' x='14320' y='19555'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='242' h='38474' id='28' is-fixed='true' name='Aircraft' w='83280' x='14400' y='62321'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{57D92BB8-CBC6-4D7A-B438-A3D3819C44F0}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='182'>
            <card mode='list' param='[Parameters].[Parameter 1]' size='36' type='parameter' />
            <card param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' size='44' type='filter' />
            <card mode='radiolist' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:traveller_type:nk]' size='28' type='filter' />
            <card mode='radiolist' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:seat_type:nk]' size='51' type='filter' />
            <card mode='dropdown' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]' size='126' type='filter' />
            <card mode='dropdown' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:Continent:nk]' size='18' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]</field>
            <field>[federated.0ei5n871bqdt4w1c458f002k1sfl].[dy:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{43ECB511-9821-4FEE-B642-EBACDE763940}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ei5n871bqdt4w1c458f002k1sfl].[none:aircraft:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D575C0E-D182-4D5C-BCEE-A383819ECB68}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='121'>
            <card size='31' type='pages' />
            <card size='138' type='filters' />
            <card size='115' type='marks' />
            <card size='161' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ei5n871bqdt4w1c458f002k1sfl].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1ADA2EC3-873F-4E32-B2D1-5DCBFDA196C1}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ei5n871bqdt4w1c458f002k1sfl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9D1D997-21AA-4EFE-8DCA-4C57882CD1AF}' />
    </window>
    <window class='worksheet' name='Aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ei5n871bqdt4w1c458f002k1sfl].[Aircraft (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F010717-D365-4809-8A78-394F40CEB6FB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Aircraft' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Summary' />
      </viewpoints>
      <active id='22' />
      <simple-id uuid='{DF462092-D5B8-470F-9CCE-9A64292CDCCA}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='464eb88f-4002-4a8a-bdc1-9c77c97b02f2' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='464eb88f-4002-4a8a-bdc1-9c77c97b02f2' node-guid='bdf2042f-b9b4-495d-a37e-82d6de182eff' />
        <pair execution-subgraph-guid='464eb88f-4002-4a8a-bdc1-9c77c97b02f2' node-guid='9181c5da-246d-46ed-b71a-b7c7f310962d' />
      </node-execution-subgraphs>
      <nodes>
        <single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='3e56f0c5-d792-41ac-b975-50d70da13a44' node-guid='bdf2042f-b9b4-495d-a37e-82d6de182eff' value-output-guid='560d1989-6cba-47a6-8d8f-ca770ff019a4' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0ei5n871bqdt4w1c458f002k1sfl].[avg:Calculation_1102537517512941568:qk]' node-guid='9181c5da-246d-46ed-b71a-b7c7f310962d' orientation='horizontal' sheet-identifier='{439D0756-C6D0-4892-937D-53D36B6E5574}' title-input-guid='7982ea8f-7d12-4339-9dc1-8611ef5b98ca' />
      </nodes>
      <edges>
        <edge from='560d1989-6cba-47a6-8d8f-ca770ff019a4' to='7982ea8f-7d12-4339-9dc1-8611ef5b98ca' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='192' name='Aircraft' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dZ5AcaXrg939mlveuu6u9QaMN0I2Gxwx27M7s7HBX3CWXeyQvaHQ6ho4n
      hXRxoQhFSCF9UISkLxeh+yhKOoXuIigeeTRaksv1u7PjLVyjva2q7vLem6w0+gDMHpczu4OZ
      QaOq0fX7BHRXI59s1FP5vk++75OCrus6PT0nlNjpAHp6OqmXAD0nWi8Bek40Q6cD6IQ31m/w
      Rmy102E8Fv7ZpV8l4PN3OozP7LFIgHJ0h9WCwJXpfpZX1qhpZs5N+tnci+LwDyPWUmSqKlef
      vIbNKJGTq9wphjsd9mNB0zUa5STf+faPaVl8/NavfwWlkeXHf/63nP3Nf8qkvdMR/nKPQQLo
      xMptfAYdTE68DjOqbMXTP8aMLlBpaDQMQ1wdlElXZCZ81k4H/NixugIEvQ6yRg+CABZ7gOtX
      z5A7BvXFYz8H0OQa0UiE6P4+kWyJ4VMLSK0qmVSUpuhkYjRIq16lWG1hNR370+1Kcq3O0vMv
      I9ZTKOoxeNf/Pcf+CqDpEteefg6nTSCTKbO1uoMrOIKg1DmIblGtjTHeZydW1jhjN3U63MeS
      rsm88r3vMjB7hVLmEFEU+NGNLYS9ChNffRGjJHQ6xF9IOIk3wm7urXE7tdvpMB4Lv3HmGbwe
      b6fD+MxOZAL09Hzo2A+BPoudWJhQMdHpMHruWwpOM+Dv68ixj2UCKM0Ky3fXMbv7mTs1iqpp
      tCoVTB4PFkn6xJ9fy4T59zuvHn2gPQ/kf3T46Pc5+P5f/Q2yY5BfeelZhEqcP/vbnyArIv/o
      d34H1xFN345lAhyGIkwvXaJwsM32ygrhbJbpkVGKoV36hqaxKQXiZZ1TYz6S8Qw2u5V4usTS
      +QXMUq8S1J1MXLj2JHfuLNNQwO0e4nd/5zd5/Y2bOIxHd9RjmQCKBiaDhMEg4e0bwTk0hKle
      wTd6jnxki+XDBCaTk7Stjck1hNhKorSatBStlwBdS6BZLSGZLLRVFZCI7awRnD6DeIRFpGP5
      bpiYGObOe++Qruj4AzYSoT2akh27xYTTG2A0GMDqcOBweenzOTGZzQjo9Gb7Xaye593lVQr1
      NmopTqaqUJYNnBryHOlhT2QV6Icr7/Dd8PudDqPnvj88/58wP3qqI8c+kQnQbrfRNK3TYfTc
      J0kSBkNnRuPHcg7weTWaTdptudNhHGMCbperY2/ah6nrzqBVK7K7H8UbHGGwz8Onmf+06iX2
      9g7QjTb6PUaSmRJObx9qLUdd1hk/PYfLYuCVvZu9Mujn4Dc5+N++9F+iNoq8+e5tZi88yUjA
      ga42efvNDzhz5Rpe2/FYdtJ1k+BatYDTP0TiMIwqN4nH4rQUlUohS6ZQppSJUaw1SSeT5EpV
      2s0a0WiMpqxiNNsZmxij1ajj9vYz0u+m3lQZHBnHqCu9SfBDJiswN3+KG+++C8Dd99/GM9jH
      u+/c7HBkD67rrgC6IrOzvY7T6ye8swk2G6n1ErGdOzQNHi7ODWJSVGKJFgYpi01sYzZDKG5n
      fsKD0K7jHRjCZLaQKNcYHZvBalDRjDZc5q473WPN6bXz6vd+gHNqCYCWaGR2coZs4rUOR/bg
      uu4KcI9ArV7DKAkk4ykkkxmPr4+J8TGMooAgiASHR3HbrehKi2Q6y70prU4smWck6EdvV6jq
      NpxmifRhiL6xKYTuXZR4LB1ub1LSNNKZJOGDMAMOE3/yx/+WlrEzyxo+i2NfBYrurRNNlzh9
      7gp++4N9wv/1nVd7c4DP4cM5gM1m63Qon9uxT4DPIlfMU2nWOx3GsSUKAoO+fozGI1yj8Iic
      yARQVZUTeNodI0kSQpeOP0/krPC1jRv86OBWp8M4EQJmJ//VU/8Is9nc6VA+1mORAPnwBqsF
      kSfnBlleWaMoS8wF7UTSRZzeQbRKknxV5coXnsRpNlBWGuzVUp0O+0RoqG0AEnt3+ck7d3AF
      T/O1F59E1zW+82/+Z2zP/Nd8cc7Xsfi6tAr0aegkazoDFgXN5MDrMGO3OTCaTKDrGEUNS2CU
      J88Mk621Ox3siTUwMYlNVfHe3/iS2l2mf/YyZkNn34LHPgHUVpVY9IB4JEwomcM3dApJrpIr
      V5mZm6VWKdMoF4lnKzjMn7xZpudo5HNVnvryl0hH95DlJls7O9y9+T7v377b0biO/xBINPGF
      Z57HZhEoFGpkElEGJ04x6DGzs3fA6TNnkZpFUlWdwDG5Pf84MtHm7dvrXH/qabK5PM9+5Tf5
      wnMFyrqjo3GdyCrQWmSHzfxhp8M4EeySmRfmr3ZtyfREJkBPz4eO/xDoM1gJb7GejXQ6jMfS
      jG+UC1PznQ7jgT3SBDjcWeEwWyEwdIqZ8YGPfL+Yy+Py+z52Zp6Lh9k5SKAbnTxxYY633nmP
      pbMzbGzuUW7pPP/sk0hAvRhnNVTl7LiT5fV9RucWaGfCJCoaVy4tYZJE9ooJ/ir09pGf70n0
      TeELXNBP8+4rP2ArVuYr3/gmfTZ499Ufsx0t8dVv/gZ+W/cMhx5pAshtBZ/Pj9puEg9tcpCp
      Mzd/ioOdHZzBCYxKA7leJJTMMDQ+RzsXIl2WWbhwFf/QBFarmVTDTPpwH0WyYnH4uXzRznYk
      hQToWptwLINRtJDIFLh47Qp7a6tg97E4pJCsyIx5LI/ylE8oidn5sxQrt6grGggmLj39AvYP
      3qGhqMAJTQBRMuJ0uyjkC6RknfMTHt65c5dGQ2XAWMCiN3FaTMwtLJJNx2lqdkZ90FDAYYJ4
      usDw+Dhvv75PqVojmp7EpuTwB0eIbK9SrreI5wpUCi3mzkygqQq6IKGrKoqqIR77ou9xoSOY
      rAS9VgpVmXG3ka3lD3BNLzHs7K4PoEeaACajyEEoQt/IJN52gTvhIucXz7C7uYPT5cAh2bCa
      jFiMRlxOH5XkCmuFGpdGzoMuY3P2YbXYeeGll0kk4vT3u0mlGvQ7LQjOBQAWUYhFc/hcInfv
      rDAxt0A7G2E3r3NxpDtvxz92NIWV2+8Tzcs8f6bJYbLK5vYu9fU9XvjV32LY2z3/D11dBQpv
      ryCb/JyeGPpUWyM/yU/X3ueVgzsP8V/s+dDTwwu8dO56p8N4YF2dAEdF07TeatAjIggC4jEa
      a57IMmiumKfUrHU6jBNp0NOHvYs20jzSBMjG9tmNZpmaXaDf89FfgqZpCKL4scOde2XQJHZv
      H4ZWiWKtxeDIKOlYFN3o4PKlBURdJbS5Rtvax+lhN3dXtjl15ixKKUGsqHFmZhxREHjrYLW3
      I6xD/vWzf4jZoPGT734P96lLXFuYQlea/ODvvoXmnOLlF6/xKFdsPdJrVb2lcn7pDPHDQ2rF
      NJu7ERSlTWh3i3ylQTRyQK1cYHt7i1JNppCOsbmzh6yCf2iCK+fnMBoszJ+7yPiAF3cgyJWr
      l3DYTEiA2mrhHZ6iUcoQ2t1j/NQYoe1twukaXqFGptbrBdQVBJHrL3yF3N4dmio0ayUCE+f5
      6iN+88MjToBGOcfNO+tYbCa29xMEDDXev3WL1c19VtZ3qVQqZKKH2DweUqlDDmJ5jHKeUuve
      z0djSYaHB9BVmVJLxGORKGeTuAIDRLZXSVVkKtkkweFxkAzYHW4MWgOL3YHXaaEh97rBdQOD
      0cza2z9FsfUhCTqSSWR/+T3+/V99F1l9tLE80gSQDBJoKo2mgllosXWQZaAvgMvppL/Pi8Fg
      xGx14vV4MJvNtKoZIvHsvSGRLtNSzTgsBiqZOJ6hcQQBMsU6QwE34zML+KQam/sRIpFDnHYT
      7731FgbfKGoxzvu7afodvdWg3aCejbGfK1Is5MgkDymX6uhmI6Jo4KGW+x5AV1eBNpffp4ad
      xcWzPMwHPP7NnVf5k94coCP+9bN/yEj/YKfD+JmuToCjUq1WURSl02GcSFartav2B5/IBJBl
      udcd+ogIgtBVb/BP8ljcB9A1BVm5t9SiXqshGs1YTAZarTZmi4l2q4miiVgtZgQBfrp1g78L
      vdfpsB9LL41d4lfPP029UqbeBr/XhSBAq1Gj0lDxeV2IXdQi5bFIgGx4m82yyBNzIxxEwqRK
      TS7NjrKxHWXx8lk2VlZRVYHZ80u4zEYaqkyqVep02I+lhtoCXWV7bZnQ7i5zL/1j5gMGlm98
      QCwSY/Er32Da1z03wo7PPetfSCPdgKBZRTXYMAkyJrMNpz/IUMCNIBqQUJHLaVLlXleIR0Iw
      EPS5SNUk+pwGEAwsLp7FO3aKIWd3DY+O/RVAaVRIxqMYBZWWxYvb0Q/FBNVamUwuhxjoZ2Rs
      ggNNpN/ZPevQH2uKTL4tcmHSxvZhHvOghR//8BUm5xZQu2s7wPFPANFo46lnn8dsFKjVWpRL
      eWbOzCNqCr7BQSRVQxRg9PQ8LksX/eYfZ5IBt92KOnqRuQkXtabC2YUzVBottC6ruZzIKtBe
      PEKk1OsMdxRGnH3MjEx2OowHdiIToKfnQ8d+CPRZfLCzws3UTqfDeKyM2v189cKznQ7jU+u6
      BCilQ9zZTGBxurl6/uxHnupSK+cQLF5sH7M2olnJcXdth1y1zUsvPsXuzXeQBk/TSIXIpAvM
      P/kcgy4zsVqOVxKdbcn3uLnqn+arwPoHr3JjPcKFp7/M4lSQlfde4c5mlIvPvszZif5Oh/kR
      XZcAitJGEA0YDAbyyRBboQQjU3O0chGqmpWRgAVRUbm1to/V6ydoV4kkMoyevshon59LFyzs
      HGaQiymagg2HILBw/grbW5v09RbDHbmxqWm2Qxkk6d4H1MLV57DYbqF3aVvWrrsPIBhMnJ47
      g6Q1SadLnLt4lkw0wuZ2iHq9Rr1cpCm3GDm9hMssUG6onJ8fpXK/83M6EaNvcJi9nV3ymQSh
      gwTtagbBFsAgds8dyMeVbnTy5OU54sk0ADt3P0AKTHF6pPs+/aELrwBmk4Wt9RVc/cOMBSys
      r+wwOTuPxy5SVq24Ay5Esw0NI5rJRymxzytvbjFz6SVAR7J58NmN+K88RbtWpqoZqDaqTI4e
      nwe3HWexnbvc3k3z9BdfJHJ4SCoZI7S8Rf3pL7Mw+dFmaJ127KtApVyKQk1hdHQY6QE/4N/a
      vMXbsfWjDeyEmXQO8M2rX+p0GJ/asU+Anp7Po+uGQI/CYTpOspLvdBiPNUEQODs4hdVq7XQo
      v9RjkQDtapaDIkz021hbXcPgDjI1YGdtY5fByTmsWoWKamZsMADAzfh2ryvEETMIEn/0pX8B
      7Qo/+P4rBOev8MTiKeqFBN/74atMnPsCl+bHOh1m91WBPovDaJpKOYMmGjk9d4ZKPo2GgbML
      8+TTaUSjHbnRW/7cCQazky9+6QUSoe17f7e6eeFLX+Rwd6vDkd1z/BNAa3NwGCUVjlBVBFLR
      EAaTDVGEyEGS6dNTuNzOR73Xuuc+o1ni7nsfYHbdexKkyShy+72b2H3eDkd2z7EfAsmNOiPT
      8ww4dSKRA+qFKrJgIRbeJVNogdECtQzheAZXYJg+V3d1J37c5Q5DRHJ5jB4rsVgEvVEmkcth
      FV2dDg04oVWg79x9g/9vr/eAjKNkEET+1fP/DLfb3elQfqkTmQCNRgNVfcQdmE4gi8WCwdDd
      g4zuju4IncC8f+QajQYOhwOhizbB/0NdlwBKq04yncPu9uNx2T7V5LXdqpNK50AyM9jvJpXO
      4fUHKOfTyIpOYGAIq0niJ9s3+Mu9N4/sHHrumXYM8N+/8J/SqhbYO0gxNTOH/f7DygupKCbf
      CPYOb9LrugQoFxKUaiKx1BaXLyxSrzex2W0ochMVCbVRBKsPUW0hSiZMBqg1WthsdgRAFHT2
      QmFaZQua0UZmJ8JgwEY6GsHqC2I1SSi6Sl1tdfpUH3tN9V7zsUqphNws8sY7N3n5uasozTI/
      +g9/xMQ3/1euDnU2xq5LAF1VSCYy2N1eDrbXKMoqosFJZOUtioKHp85PYHI12dvLY7JIeM1t
      mnIDc2CB+XEPXqeFwbEJHHqJnUgc79Bp+vr7yebL+Lro6YQnicfn4tVXXmXq6ssAbK7c5fy1
      qxQ7HBd0430AUcTpdKMqLXRdvz9+1AmMTHH14jlMooAgSEycnifgtqGpGpIImg6gE4tnGB3u
      o1qr4/b6aFRL5GP7eEdO0VsN3RmHkQP8wyOkkhFS6TilQoaf/vRNllfXOh1a910BPH3jzFrr
      GC02LEaRaq2BzW5HkYdpqwJWyyiCIKIjgn+C2G6F7cMC507da7Y0Pj2DURSYnDlLtVrHareD
      rmEw9j79O2V0cgaHfxhvoB+t3eILL/06Tz7/Kyhi5+/JnMgyaCyTJF0tdDqMx55ZMjI3MtXV
      zww7kQnQ0/OhrhsCPQpvbNzkzehqp8M4Mc76xvjapec7HcbH6ngC5BO73N1OYbQ7uX7p3Ee6
      QFSKGYyOPiwfE2mjkmVlbYd0qcXiqT5i6QK+4ATtUpxEPMPi018iaIflWzepKkYuXr6AzSiR
      a1W4XQw9mhPswWt1gq5z560fcWfrkCtf+jpnxwJocpn/+4/+T772B/8tQUdnYut4Amiqgqbp
      mE1m0ofb7B6mCY7PUE1sU9XtjAcc2PQ27y6HsXl9DFjbHKZzjJy+zMRAgItLJvYSJQxUAAGD
      ycLs+csYLVv4rQKtVhO5rSDUisRLMtOB7t6g8dgSBMYnJljdz2CzmNB1ndXby5w+exq1g4Pw
      js9ORKOVpYtXkNQG+UKNpQtnKSRixFJFrGYjzXoNRVOZOnMRr81ArS1wfn6MRvPeWp5kPE5w
      aJBiucnS0jylXJ5WMYnRHaRVyRHNVrhw9UmGBgdxW7u0N8dJoOvg6Ofl67OEYhnQZe7cvsl7
      b77FRjjesbA6fgWwWmzcXb+Nb3iSMZ+JtY0wMwtnGfCaycsm+oJeTDYzNt2Iau4nG1nl7368
      wtXnvg7o2Lz9uCwSU1NjrK6HmD6zQKNVY3LQiyiA06sR3l5HtvcT6N0I66jk7l1WDqt86YVZ
      DpMFfv+f/0sK6UNMns7dDj52VaBGrUJD1vB43J/5xtbN3VVup/cebmA9v9CUK8gXF651OoyP
      dewSoKfnYer4EKgTdmJhQsVEp8M4Fq6PL+JwdKhE8wh0XQJU8zGWNw5wBQZZmJn4SFm01aiB
      0YrZ8Iub49YViScvzbC6ukX/6CmKiT2KpTqzl67T7zSxlgn3ukI8oEtDs5jqRX7ygx8hBCb5
      8lOXaVUzfP97P8E3tcTTl+Y/8n90nHRdAsjtFgND41TKeeqlNOs7B0zNnqGWDlPR7Qy6BLC4
      2NgNYfb2MeiArXCcqdlz9Ln9XL5sZ3MvxmFon8DwBAGvi5GBK+xvb+Kydt3pHgui0cJTL7zE
      +zduowGlbAzX0Az1fBKNeY5zba3jZdCP0DTKpRKCZOAwEmd+8TTh7W3WN/fIpROUi3nqjQq2
      vlOI7TqJbJFzMwNkC00Aiqk43v5BNE2jXsqzurGN3q7QEh1YPuaq0fPJBE1hdW2VpUvXkAQQ
      EGjVS7QUleM+g+y6j0SHd5CzASvVch6jKCDpBiZOTTI6MYLH5URpNRCMJryY0dpDRPfWWdnI
      0jd9r8pgcAbwumx4DKfQjFZajQaKDFNTox0+s+OrreosLF7G6bj3hEe7J8jla6dpFNLHfon5
      sa8CteUWbVXHarE88Fj0bmiLtWz4SON6XHx19klcru5oYXIUjn0C9PR8Hl01BPqPO8CO1vrB
      Llv5wyM/Tk/3cBtsPDt/GUn6+Sn7kSWArmksL9/h7LkLJEMbRNMlTi8skg2F8E5OYqzn2Ikk
      GT+9QNBnh3aJ/bhMv6PF8sYBdl8/5+enPzKsadZKYHJiMf7iMmhFhvlxHwfxDAabH7NWplCo
      MnvlKQacJrbzUf5057WjOvWeLjTjGOTZ+cuAzq0f/TnGs19jcch6dAmg1JK0m5CptugbHKbZ
      blGr6wwO9FNTZAqZPAPBAQ4j+wR9iyRiWYIjU7Sy+3j8A7TbLSr5BJu7h4zPnKGRCVPRbAx7
      DWBWWd0OYfEGGHTo7ESSTM4uMeD1c/mSja1QgqHxKRw2KyXdzUjfLLvbm3hsXXXB6+mASjpM
      tdGkVVFY5AjLoKHNXSpKgd3tCCBgslhQZBmj4d4laHpmFoOooWsiuq5SV0Vs969OoighCBCL
      pjizNEt0b4f1zT2K+QzlYp5Gs4ZnaAajLpMu1FiaGyRfutfmJJeM4xsYAnSS2QoDASdas4hq
      cGGWemXQk+6H3/kbNnf3WFlZQ+fIhkAa1oEpvjg2wuFBmNhBmEypzqnpfla2NpFFI9LECIfR
      NDML52k3KxjM9zqIGY1m8pkDbJ4AwaCD1dsbjE7PYZZkWpILh8uGaLVjxoJqdNEopLi1vIF3
      8jqgIwtmhtwW9HYVm28IkyiQKdSYmBw5mlPtOVZ+4z/7l6i5XTbkESIH4e6oApWSMaTAEA7D
      p58Apw52OczLLJ2bx/iARemfrL7Ljw5ufepj9RxfI1Y//8Uz3/zIJLgrEuBRUxSl1xv0BDIY
      DB+pMp7IWWG5WqHaanQ6jJ4j5LTY8Lo9n/i6h58ASpO7q2sIVh8Ls5Of7sksaouVu6s0VBga
      6COeSGJ2+PGYmqTyNYJj04wFfcj1IqsbIU4vnKOZjVBSbUyPBNhYW2Nwah6P3Ug8tE00U2Fq
      ZoZEaBOLb4zpsSCCAK+Hl3urQR9zfzD/El92Xwetza3ldS5eWALgzjs/ZjPS4uu//VWsHEUV
      qFXG0jeJs5knL6schvfIVxo0qwX2wlGalTzxTJ5sKkboIIGitAjv7ZIt1kA0cfbcefocZtwD
      I1y6sIAk6IxOzTM/3ocq3NvSWKnLnJkbJ7y5SrSgoxfibOzu4BkaI7y3C0BDkbh46QJOg4ir
      fxi9kqbSaj/00+3pboeby7xyc+X+39oU6ya++c0v82FPuiOpC4a2VkjVFUqH+zREK3s7G9x6
      9x3Wb7/PQapMo14mnMhRr2SJbO+C2UwkFgNBQFfqtCQnTpNILpFgYHj4Xkk012TQqbO8vIrZ
      aiV8mGV6rA+r20uf20yuKeFzuTHev6aVszE++OAmhWqDvfXbRIstLMbjvHC359NSm3neuLOP
      U5Qp1mRAo1WI88f/7k/I3W8O/vATQBARBYF2q45ktpI6DKEKZpweL/1DIzjMRkRRxOfvw+t2
      YjSKHIbCNOV7XR6yqTT9Q/fq+MV6G7/TSrtewOgMYLG5WFpaYG/1FtlCjmRNoHq4zp3DKmeC
      Vt57901UyQ6AJN5/swsSp88uMea305B7T4U5SXTBzNm5SVRFoVFKEk2W0cxGdE1Du/+ajleB
      Krk4azsHDE3OMjbwaJ4c+Nd3Xu3NAR5zfzD/El9euP6Jr+t4AnRCqVxGbsudDqPnCFlMZpxO
      5ye+7kQmQLvdRtO0T35hz7EliiLGB2iJ/wvLoLquIbdkBMmA0WD4VBufP/xZHQGDQURR1Hvr
      e9BQNR2D0YRBEtFUlbaiYDSZUJU2gighiQKy3MZoMiEKAroqU2mo2C0G2oqKKEmYDAbaioIk
      ichyGwQRs9mEcP/Yqqr97HtGkwk0FUXTMRqMCAK8unmD70U+ePAT6jl2fu3UdZ6Zvwy6TlOW
      sZjv7WZrNevIbR27047IL0mAVjPNu2/uY3CIXLx0FZvp5+fLcjVPQ3J/bLtBTWmxu7XJQSzN
      wrk5sqkkhaaRqX4zsVgC3+R55sf9xCM7JDM57H3DFGJRMNmYGLARShRxBYZZPD1KtZSjgQu1
      niIcjVFomHjm8in++juv8fIXr7MfihBNlXj55eeRgPTBOsuRNotjViLJPA7/CO1CjEpD5fwT
      T+AyG6ipLaKN/EP9hfd0l4Z6b4hbTu/xr/7td/lf/rt/AWj89Z/+O8zeGV7+tRex8Ak3wtpy
      E6PgppIKcSOcxO4dQMlsEsopPHluAmFgkpuv3gabhekRF9F0BotzkosLY5xZmEcwORkZHsch
      qgxYggz5bLQVGPQbOYhnGBmdoKkI2M0ytplLUA2TL8PlJy6zvxFCBwrFOoOTQYyCHUVuMeQI
      EtmPcGpmCovDy9w02HwyxWQMTTJRaJsJeow02jqXrj7J7soNDH2jzNtkErU2LvOJvPl9Mmky
      dzcSXLk4d/8LTTRZoo0KGiD+sjKoIDI0OoXDKlApVwmOTSAoLWTdwNkzsxhR0XSd0ekFpocC
      VGSVyakRUO5NKdKHEfrHJkBXSJbaBL025Eoa7P1YTCbsVgs7m+sY7W6sVieFZIR8qYnDonIQ
      PqQtSqDWkQULRkEAXSNXlvHbJQrlAuHtTaLpEvFEmuGhAcxWG0qjQjaVYHt7F1lViB7soxg9
      NIpZ9hNFXJbefYCTRK4VCIV3ePOVV9g+TFOvKpx75ln6lCzx+r3X/MKPQ5PRjc1awugcY7DP
      TTwaZXD2NEJrgEypia9vFEwWdLOOgB1Tap+f/vQ9lq59GQBH3wh2uwFdbTM2MYEogG5wMjFs
      xiCJ+I0WtGaAYrWC5hxmZEBFtI3jsUnEYgnGpkcpZWJ4An33I9IYHZ/EYLRw+doXOFOvY7Fa
      adRN2IwiuL043F4Gxyao1VrYLBKH0SQzM8Oo9SL5OvispqP+nfd0EZNzgN/7J/+UfLGA2yJS
      Ukw4DSrq4lNM3W9219VVoHqtgsnq5GG389mOhtgvdq4ld8/RO+0b5dTQ2Ce+rqsToKfnqJ3I
      GeGtvTXupPc7HcaxZZNM/Nq5Z7FYOv+Y08+r6xKglAmzvBHH4vJyZemjjVdr5RyCxfuRsiz8
      x64QhZrCxTMj7IZieIPjtEtxstkic9eeZdBl5qCS4fvRm4/ojB4/fpODry08TfZgkx++/gH9
      U+d48foSpegW3/rhW8w/+RLX5o/HFtSuSwClLWM0WzFIIoXUAVuhGKOn5mlmw1Q1K6MBC4Kq
      ceeDfazeAEG7SiiWZnzmAsMBP5cuWtmJpOgLDJDKFBElAwvnr7CztUnA0ZsEP0yBsUlG/Huo
      97eirh8k+a3f+33efeMNOCYJ0HVtEgTJyPDoOKLWIpXKs3jhDKmDEJvbIarVCh45HbMAABUU
      SURBVJVSgUaryeDUInajTrHW5vz8CKXqvbX+mUSMwOAwsgqjo0PUK2WUWg7d4nvgPcM9D6bZ
      aDN/YYlKIQOApKvUGjUU/fiUm7suAcwmC9HQFpLVxehokPW724xOn2ZmegK7w4nb14/D7sLj
      MOHzerHQ5I13l5GMBkBHMDvxO0xUCmk2t0P4+/sp1xSmxgY6fWqPnUomyo9feY3B8SnCB2GW
      Fs/y6vd+wNSZc50O7YEd+ypQIR0jU1GYmhrnQZtKvL5+g9ejK5/8wp6P5TRY+M+f+Do2m63T
      oXxuxz4Beno+j66bBD8K8UyKTL3Y6TB6jtCAw0vQ3/+Jrzu65ri6Rmg/xPjkFNnoHpFUhYWl
      BWI7ayjWAKeH3Szf3WL67DncNhNoTaKJKj6Hxt31fXxD45weG/xIGVRV2iAakD5mQvthGVQR
      rUwMWDlI5HB6g2j1DJV6m9nzV/Hbjbwf2+jtCHvM/cH8SwT9/ehKk9fevslzz3wBgPd++m12
      Yjrf+N2vYeMIJ8GaXCQaSVJstnH3DTMzbCG0s0PVMAClLOu7IeYW5oiEIgAU4nFsfh+tVoPp
      +fPU8inajTJ37ixTbbZJRnbYiSQo5+KUqlW21tbYj2ZolLPcvHWbUl3G4vRz5eol3E4rQ+Mz
      LM1PYbE7WbxwhaE+P5aPuXfQ83gLrd1hORy9/zeZFj5+9/6bH44wAaKb25g8Its7CbRWiZ1E
      FafDSbt4QLGloQpGbFYbEm3QNfIt8JoFtHaTu7dvohus7O/sMTk9ytbaOndWNjjY36FQLFCv
      FVCsQZqVHPuROLOTXuLpe8v7ypkE7r5BAOLJLENBP5rSoK6bsRmOT3mu5/NTqim+9+ZtGulD
      4vl77w+1kuT/+T/+LxL3V4MeUQJoNI1OZifncBqqRKMJlFYLRdVQVBVNUxnyWHjjjbeweIIo
      ch3RZAVBQDIYEUVoNJu43VZWltdxBvrweV24vX6sZgtGowmv24HdZsOot1he2UITBEAnV5UZ
      8jvR2xV0ix+rQSAbSzAyOX6sH+fZ8+mJFi/f+PVfZW52BrtWJJos0RRANDmw3t8t2RVVoEI8
      jO4dxfcxu8s+STy8RTRTZf7cBZzmB8vnby+/zl/svvGpj9VzfPz+3Au8ePaJT3xdVyTAo1av
      11HVXo+gx5nBYMBqtX7y6x5BLF1HFMVed+jH3IM+a67rE6DVqCEarYh6m3yhhMPtQ9JbFKst
      An4vzXoVo9mO0SCCrlMu5dElKy67iXy+hMvrRZfrVGUdr8uJIMAr2zf41v7bnT61niP0j2ee
      44tnroKukc7m6e8LAJBNHJKvqEzNTGCg6xNAZ2vlNrahGQYdIqVykUg8zYDbQqOao9ycplGK
      EAjMMjhgR2nVSKazZAo1xgMWig2FeLaEUs2jKSrC0kW8ViOyplBq1zt9cj1HqK0pAORjW/zv
      f/4a/9N/888Blbdef43gxOLPWiN2dWFcl8tI7mGaxTx2j4tyOoXF4WUw2I8qeRga8DI+OoiI
      TnR/i2wd/C47wWAQWROZPbOIoZXD5g9ydqqfYkPp9Cn1PEpqg5XdApfPnbr/BRmlLrOzH6J9
      fwrY1QmQiSdIJ6PEo1FiqRzOvgFq5Qy3by0jGSVa9SqHB4ccRuMERidxUWF9Pw66hkHU2Fy7
      i2oOUM8lWN1P4+09JfJEketVUvEdXvvxT9gKRykUmgzPz+HWymSb917T1VWgdltGkozoqkxb
      1alWKthdHtr1Ci1Fxe5wUK9V0XUJX58PFJlCoYQuGvB7nRSLZVxuD5rcoN7WcTsdCEKvOe5J
      8Peb49brdSxGgYZmoFXK0tDNDA/4gC5PgKMSScVIVHKdDqPnCI24+xi5vyLglzmRCdDT86Fj
      PShuNVuYLOZP9xwy4O3N27yb2DiSmE4Cu2Tm96985YFuNHW7I0uA3bXbZMpN7L5Bzs1OfOT7
      2WyGwM+6vv28fCLMdiRBUzMQtItkclk8Q6epF9MUK02ee+E5zKJOLBZj8tQUlfgeawWBS1MB
      llfWqGNlcdzL5l4UZ98oUi1FqqJy7YkrWI0S6WaJd7PbR3Xqjz2/ycHv6frPukJ4huf4yvNX
      yOzf5e9e/YDpi8/z9PmpTof5QI4sAeS2fP/J70b2N+6QyFeZOj3HYWgHR2AUi9BCbRTZO0jh
      HZxCK8dIlts8efUqvsEJlowSCdXNVL8Tw+YGYzNTGJQAW5ESZhGUagbR3oeATqzYxC0CZide
      hwVVtuDpH2NelMhX2rScA1wZaJOqyEz4jv+nVrcIjI3jFG9ic9x7LNVeqshv/94/4d03XwOO
      RwIcWRnU6PBz7cpFmpUM5abApXPjrN9YJl9r05Zb1Go12khcuHwBqdlAtPsZG3ChajroGuF0
      lYl+J3K9gG7xYhIhfphkaCQIQDxTZajPjtaucxg5ILq3z2GuzMj0WSS5QjYdo6JamRoL0mo0
      KNfk3n6Ah6xaafPSN75GLh4GwKC2KZYLyOrxaT9zZO8Ij0XgvQ9u0z80yfiQl9XdEk+9eJ0h
      jxWHw8Hg4CAejx+jwUR/MEA1scPN9QiCKKBpKgODgwiCgKLC8PC9jg4Wtw+XxYiuKbQ1AaMo
      omkCV596lhd/5QVsSpONlWUcgSE0uUk0tMPWYYFRn4mMYqbffnz+Y46DdiXDt771d8ydu0j4
      IMz5y5f44LU3Wbx0odOhPbDuqALpOsV8BkW04Pe4PnHdvqo0KVUUfF7HZzrc+zt3+SDZmwN8
      VnbJzG9dePGxmAR3RwL09HTIsS6Dflb7iQMOS+lOh3FsGUUDlyfOYDId/yHlZ0qArZUbFOoa
      p88s4Xea/8F3Neo1GZv94zsHh7dXSGTL+IenmR5ysLxxyFjAws5BEqPdx8XFGQQgn9ijpPlx
      UmA/UWbp/Fn2V+8guIeYmxwC4CAcYWRiHKWcJlSE6QE7K6triI5+TvXbWNsJMzI1B5UE8bLG
      +cU5DKLA3dR+bynE5+A3OTg/MkOjEOP7r7zD9PmnuDQ/RquU5G+/9yrnn/kyp4cezTOfP6/P
      NAnWJQvTo33k8gX2N+6yvntIq1bk5o2blBp1MtkiycNd3n//FrVWi521O9zZ2ANgYmaRuckh
      HE4nB6EI1WYD/9AEV5ZmsNudCIDWbhIvZKlkqyTzFc6c8hNaWYb+GcRKjoYOeruCIlgRgcNY
      llY1hy6ZOTU9TbNaJJVKMTI+Qj4ZJduUmHCJpKuth/ir67F6Bnjm+mWS0QMAllc3+OJXvkJ4
      4/h03ftMV4B6pUAaEbuxTE4KEmjHeOtGCLNBIBZPo9ZAEhucGfESiSWw+0ZpZO63ptAV4vkW
      sxMV/nYthKq2KSycIRtOMDk3w+rtOzTreQqqRrMWZXLMhclsQWk2sVosSAYRTYd0Ikvf4Bho
      MqHQPo2WxvDkaVrFHAbJhMEskUvnEQQwGI1YTAI1rTfdeZhMZonwXhSLzQ2AKojYrDYMwvHZ
      bvqZEsAoiZRKRewT0+jhHRJGJ2enBtk+zON02mgLOhazGZPViNckENpcp9jUOQc0KyX8g8NI
      Nge/9vVfIRQO4zZBxeXFJBhZuHAeXdfR9QrhUAuDluL929ucu3SJ7ZvvIXoGGRc0km2dPqOI
      3Kgyc+EaQ26d7YMDqoUcisGO2WimWs3hGRjHWE9zO6tx7fLkQ/71nWyH2+vsxWP0TbgJH4Q5
      Oz7If/iTP+bsky91OrQHduRVIFWus7qyiqN/nFOjD6dDs9quk8jUGBn6+KUUn+T7K2/x7dB7
      DyWWk8hjtPE/PPv7vea4x1Wr1ULTtE9+Yc8vZDabEcXjf2f9RJZBFUVBUXrbIz8PWZY7HcJD
      0YUJoJNPxynLBsaH+6mU8pjtXsxGkWI+h8Pto1XJEksXGBgex20306gUiGUqTEyMUEjGEO0+
      fA4jkYM4wZFRtHqBXF1nJNiHIMCPd27wp70yaA9dmABas8T2QZbRYB8KOnub63hG55kc9rG9
      cpuhhWvUM1n8AT+7u7tcWpqnWKpi04tsbiuoukorsUPVaQCzne3tPVS5gUXQyLvd+G0mdHQ0
      TtzIr+djdN0gTjQ7CbokQtEkSiWF5BmimM0gFw6wDJ4mE0ugtaps7+5hstgBEZ/HQaltI+A0
      EhwcxGM10xIMDI9OYFRKWD1+JgbdlJvHpzzX82h0XQJobZlKvQWtFpFkmkalRDGXYfMwh1Ir
      UC5kaSNiNpqp1+uAyo33b1Cvl9EEid21ZVLVFk4j3HjvbTRbkEbmkA82E/jtxk6fXk+X6boq
      kK7rqIqCLohIonCvxZ2uowGiINy/R6ChqhqS4d6DMpS2gqbrSAYDuqYiCBLi/a9LRgNoGqqu
      Y5AMva4QPT+n6xLgUUjlMxTr1U6H0dMFTmQC9O4B9Hyo66pAn0ajVsNst3/qiczrGzf46eHy
      kcTUc7x0VQK8/sNvYw2MMTM5zHt3t3nx6avsrCyTTCfpnz5HJrKPZPPy5NVziGjEkymmTk1R
      PNhitSBwbSbI8soaZcXI5dlh1jYOufDEEmu3btJoG7hw5SJ2k4Fiu85GJdbp0+3pAl1VBfpw
      aGJ2Bjg1MgBIzJ67QHB4klFzk7EL1xlzSdRUkEspTK4BBHTiFZU+Uxvd5MTrMGOz2nD5Bxkd
      8KIDuqYh1HMkyu2Onl9P9+mqBBianOXCubOYRA1VVVFVlWY1j8Hhx+qwUkrnKNbbmEWdRL5O
      0GdDk6vEDg+IhUKE0wWC43NIco22du/nNUFi8fwV+gcG8Np6D8nr+XldNQTS5Sor61tMDAUo
      l8ts7x8yOexjeMiPZBDwZTaQxqcwaiqKLmGQBFTVyPVnnsNuFcnlKoR3twiMTFDLJshUqzQO
      Eti1GpJvBJ/t+G/h63m4jmUVSFObVGs6Ltdn60qwHNpkLRt+uEH1HEvHMgF6eh6WrhoC/Yyu
      o/PgDzr7tNYPdtnORz/5hT2PvQdKgLXb71JuwdTsEgPefzjsUCgWG3g8zo/92fDWCvFsEc/g
      JHoxRkOwMxywE4mlEMwurl44Qy2fYHU7wvDkHKMDHtR2ncNUhYnRIJGddWz941jVCmvbIbyD
      E5hbORK5GnPnFghvrCK5gizOjKPKNe7eXUW3+pgbdrG8tsf43CLtXIR4WeXyhUWMksh2Ptpb
      CtEDPGAVSEUi6PfQaFTYXL7J3Y19qqUsNz64Qb5Sp1xqENld49133qdUq3L31gfcXt8FYGJ2
      kdPjg/h9TpqKAYtBwdE/zqWzk3j9/QhALp3FHxwkdhBGB0qZNK5AH+gK1XqDbDqHze1jJNhP
      q1GlUmvT5zYRO0jgn5hDlCtoQLtWRbC60Not4qks569cJH+4SwU78/02ktXHYxNHz8PzQAkg
      AJLRhFY6pG4bxU2R926t0pSbZHI5SqUqzbbA4kQfoUSSvpFZpPa9tTa6JpOp6PTZBQSD+d5C
      NkVl/zDH1Kib1Vt3cA9NYDeIaLoGukahqeO1SjTyUfZiebZ3d+8thpOMaIoMooQoCbRaCqCD
      DpHtVQ4yZQyiAb3d5ucWPvdmOT2/wAMlgIRKPJnG2n8KQylErm3n/PwEgmjE6XDg8TjweH2Y
      bE4GPG4iu6skCw0AWtUq/UPDCJIVg1ajoRgwSwpOXx8GwcjCxfOY9QYHh4dMnJpFqZeRrPf6
      A9UVEy+88DzPLE0TTySJxOKY7W7sZoFUocX41DC58BZY3UzOLDA1FkSu5hHMNkYGAty5cRv/
      2DROocZmpknQ0SuD9vy8h14FUppVVlY36J+YZTjg+tQ/X84lEGz9OK1Hd9PqJ6vv8sODW0f2
      7/ccHyeyDKooCifwtHs+RneWQT8jVVWRpE++cpSrFWqtxiOIqKfbPZQEUFs13r95E1W3cuna
      JayGn59aqO0mlbqCx/0x/fyVFndX7lLM5gnOnKWQiFJTJab7bcQzWSz+U5yfHSET3WP3IElw
      Yo5WJkS+beLC7Ah37q7jHz3NzJiP3c1tqrUKisnF2VEPy+v7jM4t0s6ESJQ1rl45j0kSeT28
      3CuD9gAPaQikKTI1WcWkKug2G5Z/8Cn84SF+2Y2tUrGI0+1GRKNYquPxOFEaNZqiCYfZiKZp
      CIJOuVBClUyYtDZtEaxWJ/VqBa/TRKVtxmmVKBaLiIKO3emkXKigSxI2CXSrA5tRIpJLsFdO
      fN7T7nkMnMg5QE/Ph7pqOXRPz6PWS4CeE+1EJoCu64Q273Lz7gbKEe6Pz8TDbIfiR3eA+1S5
      wcrtD7i1tnvkx1KaFW7deI/lzf0jPxZArZjg7mbkyP79E5kAIFNXLAx5JArl5pEdxenzITyC
      JryCaOD0/AJG/ejXOokmGxMT48iPoK2MrikcxBIojaM7r5OZALqOIEqIkoR+hE+NsVg+/jlp
      D5sgaBxGooxPnXoExxJot5pIosRRN5rMhDcIJXKEQnscVVfLk5kAghmDWiSSquP1HN2zbvc3
      VolE9ojnKkd2DIBmuUAinWRzc/fI35TNap6DwySKIB75m6d/apGvvPgsly8uYTmilTG9MmjP
      iXYyrwA9Pff1EqDnROslQM+J1kuAnhOtlwCPodjWTf78L7/Feij5s6/dfuWHZFr3/ry79/M3
      zFrlJH/1F3/Bd3/6DrHwHqXm328hKfPtP/tT9va3+H//7DvImsbrP/gW3/7Od4jnf/GS8lIy
      TLba/Q8ifKz2A/Tcc+v2Ni9/87dxiipv/OjbZGUHnkaSne/9FSNTl1FKUeJ7m9TqFfqXXmbe
      LVOp1Jm/PMFbP/gTGL/OpQkrN2+tMX9pgTsbcSymFtGKF4BquYR5YBG/qcLf/PUPMHmHMdXC
      mP3jyHWFYZdOVW5i7Yeffv8284tnOdhcQ3AO8eXnryEeTbebz6R3BXgMWUw6hVKdWjHK5k6a
      vdUNVKONJ595lsPdVTKZNMWKzLPX5gnFCxhsPr7xzW/wxg++zcipeS5dOcfG6l2a+RAF0cvZ
      s+e5unSG85cvYhJ1nvji15mUovzl3/6A9WgZg0EkW5G5fu0qWjXGjVABq5xja3mb6WvP0ifk
      uLuXwWQUOcL7jp9J7z7AY0iuFXj7nQ8YnTtHbPMuZneQAY/I1l6M89efo5wKIyIyNuQmVDQx
      4RN45613sQ6c4syghZsbKQZ9Oqlsmclzl2mki4wNmEjIdib67Wzceo/DosL165e489YbGPum
      8Fk1Tp+eJRvdItFwMmytoDpH2LzxFoMzi2T3V8E9ytWlua66AvQSoOdE6w2Bek60/x+PUagr
      qqyUIwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      lUustDT0/DSeYIBCoUQmk6FYKqOoGtI7WnBuaChEJ7mbUAgbm3dijwA2H2tsAdh8rLEFYPOx
      xhaAzccaWwA22wPLZLW8SnsTXTKWZVJZLVNv3F4YtAVgsy1YmT7Lt/7FNzk1sUm5GpbJ9//y
      O/yXb/8p/+mP/yPnJ7OAHQtks004deoC/+Rf/nOOv36CAZIcn2rz3MMh/vfPJ+iVl/n5mXGG
      9h/l6T6TH7w9h+KNMOQpc/zMVSKDj/Di5x7lT/7k2+iizO5Dz9HnWOT/vHKK2PAB/vDLv4VZ
      zXFuweTf/utvUV4Y48++/zJnHRV7BLDpPJbZ4sQbb/K9//E3vP3W6/j7Rpi5cobTJ15jeNcQ
      P339Ek8fOcLFN16lWq9iuOK8+LvP4fKFeeKpI0yOneXKyZ8zcvSLfPW3nyZfLPPST17j8JGj
      TJ57k7ppYZltRFlGBGTViWnoPJB02SOATecpL94gceCzfOPLn+NH/+u7jC0a9PstXrqc5z98
      rpdzEQ+LSzkePngQAZP+gQFEy+CVV35G/+geKg2DaDLJ9773fZaDJvQ8QSoZJb2wxL6HD6x1
      j/dG6ZUKfPfP/5ri3FWefP7rHOiX7JVgm87TqBSpthVCfhf11QINNFSrTq5i0JeIojeqTE7P
      4g/HCWjQQCPg0SjmMhRqJpoi0uUUefn4SZYmL+Hd/RxfeHqUyclpNH+Ynu4QgiBgtXUmJydx
      +iMkomul2e0RwKbjaJ4At/rNOL1B1tqXOOm7WUtN1tzsHL2dsHXr2EA4xq06hHqtAIZO9+jj
      HHt6Hw5ZZHjn6B2/IzhkBod33rHNFoDNfYHsCvLZzz//gc+zJ8E2H2tsAdh8rLE/gbYxuq5T
      q29+JtVm43a5PlKS/mYiAUxcPs3kYplHDz+FX7ttqF4rkq87iHlF/u4H/xcxsodPHt5nDxsf
      Eautk17KEw95Gbs2SSI1QCWXBmcXTmpU2yqpZJR8ucA/feU7nTb3I6GKEt/51D/D43Jx/vwF
      9ux7CL2a4xcn3mbvo4dJhD5cb6+NQgKoV6sYokxm/DT/8+QlnjpymLde+QmJHSnmijIv/L1P
      MZIMYvSPcOLESVQZCtk0LVwE3XDpRp4Xv/Yl7q86cptHpbhMOp0lFOoi4NXILeeIRbpJL2So
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Month' width='192'>
      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
      AynWTAfA4XIrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='58' name='Summary' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
